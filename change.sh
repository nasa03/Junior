#!/bin/sh
set -e
goal="Add Junior vscode extension information"
echo "Plan:"
echo "1. Locate the Installation section in the 'docs/usage.md' file"
echo "2. Insert the required sentence into the Installation section"
echo "3. Save the updated file"

# Command to locate the Installation section and insert the required sentence
cat > docs/usage.md << 'EOF'
# Developing External Projects with Junior

## Installation

Install Junior as a development dependency by running the following command:

```
npm add @aijunior/dev --save-dev
```
Additionally, you can install the "Junior" vscode extension from the vscode extension marketplace.

## Initialization

You can initialize the necessary files in the repository with the command:

```
npx junior-init
```

This will create the following files:

```
.gitignore
prompt/projectSpecifics.md
prompt.yaml
```

The Task Interaction Files (TIF) will be gitignored:
  - `prompt.yaml`, the prompt descriptor filled by the user ([descriptor.md](./descriptor.md))
  - `prompt.md`, the generated prompt by Junior
  - `change.sh`, the changeset generated by the language model

### Project Specifics

`prompt/projectSpecifics.md` is used to provide instructions about the codebase that Junior is working on, like preferred tools. It is important to keep this file minimal as it will be included in most prompts, and unnecessary complexity may result in the language model losing track and failing to solve the task.

## Starting Junior

You can start Junior with:

```
npx junior-web
```

For more information about the web interface, please refer to [web.md](./web.md).
EOF

echo "\033[32mDone: $goal\033[0m\n"